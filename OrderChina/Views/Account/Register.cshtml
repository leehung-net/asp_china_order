@using OrderChina.Models
@model OrderChina.Models.RegisterModel
@{
    Layout = null;
    ViewBag.Title = "Đăng ký";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <meta name="viewport" content="width=device-width" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <div class="form-box text-center" style="width: 550px; font-size: 14px">
        @using (Html.BeginForm(new { id = ViewBag.id }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => m.Phone, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @(string.IsNullOrEmpty(@Model.Phone) ? Html.TextBoxFor(m => m.Phone) : Html.TextBoxFor(m => m.Phone, new { @readonly = "readonly" }))
                    </div>
                    @Html.ValidationMessageFor(m => m.Phone)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @Html.TextBoxFor(m => m.Email)
                    </div>
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @Html.PasswordFor(m => m.Password)
                    </div>
                    @Html.ValidationMessageFor(m => m.Password)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @Html.PasswordFor(m => m.ConfirmPassword)
                    </div>
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @Html.EditorFor(m => m.Name)
                    </div>
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Gender, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        <label>@Html.RadioButtonFor(m => m.Gender, "Nam", new { style = "width: inherit", @checked = true }) Nam</label>
                        <label>@Html.RadioButtonFor(m => m.Gender, "Nữ", new { style = "width: inherit" }) Nữ</label>
                    </div>
                    @Html.ValidationMessageFor(m => m.Gender)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Birthday, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @Html.EditorFor(m => m.Birthday, new { @Value = @DateTime.Now.ToShortDateString() })
                    </div>
                    @Html.ValidationMessageFor(m => m.Birthday)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @Html.EditorFor(m => m.Address)
                    </div>
                    @Html.ValidationMessageFor(m => m.Address)
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Account, new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-7">
                        @Html.EditorFor(m => m.Account)
                    </div>
                    @Html.ValidationMessageFor(m => m.Account)
                </div>
                @if (Session["UserType"] != null && ((string)Session["UserType"] == UserType.Admin.ToString() || (string)Session["UserType"] == UserType.SuperUser.ToString()))
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserType, new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-7">
                            @Html.DropDownListFor(m => m.UserType, (IEnumerable<SelectListItem>)ViewBag.listUserType, "--Loại tài khoản--", new { @class = "form-control flat", style = "width: 300px;display: inline;" })
                        </div>
                    </div>
                }
                <input type="submit" class="btn btn-default" value="Đăng ký" />

            </div>
        }
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
</body>
</html>
