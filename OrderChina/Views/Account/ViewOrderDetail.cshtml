@using OrderChina.Models
@model OrderChina.Models.ViewDetailOrderModel

<style>
    #action a:hover {
        -webkit-transform: scale(1.3);
        -moz-transform: scale(1.3);
        -o-transform: scale(1.3);
        box-shadow: 0px 0px 30px gray;
        -webkit-box-shadow: 0px 0px 30px gray;
        -moz-box-shadow: 0px 0px 30px gray;
        opacity: 1;
    }

    #action a {
        -webkit-transform: scale(1);
        -moz-transform: scale(1);
        -o-transform: scale(1);
        -webkit-transition-duration: 0.5s;
        -moz-transition-duration: 0.5s;
        -o-transition-duration: 0.5s;
        opacity: 1;
    }
</style>
<section @*class='container'*@ style='padding: 20px;'>
    <div class='row'>
        @Html.Partial("_AsideMenuPartial", new ViewDataDictionary() { { "Manage", true } })

        <div class="col-md-9 order-content">
            <div class='order-link'>

                <nav class="navbar navbar-default order-nav gdtq-header-nav flat" id='top-menu' role="navigation">
                    <div class='container-fluid' style="padding-left: 0px;padding-right: 0px;">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed btn-flat" data-toggle="collapse" data-target="#menu-head">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                        </div>
                        <div class="collapse navbar-collapse" id="menu-head" style="background-color:orange">
                            <ul class="nav navbar-nav navbar-right">
                                <li><a href="#no-shop">Không shop</a></li>
                            </ul>
                        </div>
                    </div>
                </nav>

                <div class='row'>
                    <h3 class='text-center'>CHI TIẾT ĐƠN HÀNG <b>@Model.OrderId</b> - @Model.StatusText</h3>
                    <div class="alert alert-default btn-flat">

                        <p><p>
                            <em><u><strong>Chú ý:</strong></u></em><br />
                            Mỗi dòng dữ liệu tương ứng với 1 link sản phẩm, quý khách điền thông tin chi tết để thuận lợi trong quá trình giao dịch.<br />
                            Hàng được ký nhận tại kho Trung Quốc và trả hàng tại kho Việt Nam của China Express.<br />
                            Trước khi tạo đơn hàng, quý khách đọc kỹ quy định và bảng giá của China Express:<br />
                            - <em>Hướng dẫn:</em> <a href="http://nhaphangtaobao.com.vn/tin-tuc/dich-vu-dat-hang.html">http://nhaphangtaobao.com.vn/tin-tuc/dich-vu-dat-hang.html</a><br />
                            - <em>Quy định:</em> <a href="http://nhaphangtaobao.com.vn/tin-tuc/quy-dinh/quy-dinh-voi-khach-hang-order.html">http://nhaphangtaobao.com.vn/tin-tuc/quy-dinh/quy-dinh-voi-khach-hang-order.html</a><br />
                            - <em>Bảng giá:</em> <a href="@Url.Action("Banggia","Home")">@Url.Action("Banggia", "Home")</a><br />
                            Quý khách chốt đơn hàng có nghĩa là quý khách đã <u><em><strong>đồng ý và thực hiện</strong></em></u> theo quy định của <strong>China Express!!!</strong>
                        </p></p>

                        <!--article style='margin-top: 20px;'>
                            <ul>
                                <li class="bank"><p>Để thanh toán đơn hàng quý khách vui lòng chuyển tiền đến tài khoản <strong class="text-danger">Vietcombank</strong> Chi nhánh sở giao dịch Hà Nội</p><p>Tài khoản: <strong class="text-danger">00110041XXXXX.</strong> Chủ TK: <strong class="text-danger">XXXX XXXX XXXX</strong> Nội dung chuyển khoản: <strong class="text-danger">Đặt cọc đơn hàng XXX gửi đến 0962.XX.XXXX</strong></p></li>
                            </ul>
                        </article-->
                    </div>
                </div>

                <div class='row'>
                    @*<p class="col-md-3">
                            @if (@Model.Status == OrderStatus.Cancel.ToString())
                            {
                                <a href="#controller" onclick="alert('Đơn hàng này đã hủy!');" class='btn btn-primary btn-xs ' title="Xác nhận đơn hàng"><i class="fa fa-check"></i> Xác nhận đơn hàng</a>
                                <br /><font style="font-size:12px">(Click khi muốn đặt đơn hàng này)</font>
                            }
                            else if (@Model.Status != OrderStatus.New.ToString())
                            {
                                <a href="#controller" onclick="alert('Đơn hàng này đã xác nhận!');" class='btn btn-primary btn-xs ' title="Xác nhận đơn hàng"><i class="fa fa-check"></i> Xác nhận đơn hàng</a>
                                <br /><font style="font-size:12px">(Click khi muốn đặt đơn hàng này)</font>
                            }
                            else
                            {
                                <a href="#controller" onclick="confirm_order(@Model.OrderId ,'1');" class='btn btn-primary btn-xs ' title="Xác nhận đơn hàng"><i class="fa fa-check"></i> Xác nhận đơn hàng</a>
                                <br /><font style="font-size:12px">(Click khi muốn đặt đơn hàng này)</font>
                            }

                        </p>*@


                    <p class="col-md-6">1 NDT = @Model.Rate.ToString("##,###") <sup>đ</sup></p>
                    @if (Session["UserType"] != null)
                    {
                        if ((string)Session["UserType"] == UserType.Client.ToString())
                        {
                            <p class="col-md-3">
                                @if (@Model.Status == OrderStatus.Cancel.ToString())
                                {
                                    <a href="#controller" onclick="alert('Đơn hàng này đã hủy!');" class='btn btn-danger btn-xs ' title="Hủy đơn hàng"><i class="fa fa-trash-o"></i> Hủy bỏ đơn hàng</a>
                                    <br /><font style="font-size:12px">(Click khi muốn hủy đơn hàng này)</font>
                                }
                                else if (@Model.Status != OrderStatus.New.ToString())
                                {
                                    <a href="#controller" onclick="alert('Đơn hàng này đã xác nhận!');" class='btn btn-danger btn-xs ' title="Hủy đơn hàng"><i class="fa fa-trash-o"></i> Hủy bỏ đơn hàng</a>
                                    <br /><font style="font-size:12px">(Click khi muốn hủy đơn hàng này)</font>
                                }
                                else
                                {
                                    <a href="#controller" onclick="confirm_order(@Model.OrderId,'0');" class='btn btn-danger btn-xs ' title="Hủy đơn hàng"><i class="fa fa-trash-o"></i> Hủy bỏ đơn hàng</a>
                                    <br /><font style="font-size:12px">(Click khi muốn hủy đơn hàng này)</font>
                                }
                            </p>

                            if (Model.SaleManageInfo != null)
                            {
                                <p class='col-md-6'>
                                    Nhân viên KD: <b>@(Model.SaleManageInfo.SaleName + " : " + Model.SaleManageInfo.SalePhoneCompany)</b><br />
                                    <font style="font-size: 14px"><i class='fa fa-phone'></i> @Model.SaleManageInfo.SalePhone</font>
                                </p>
                            }
                        }
                        else
                        {
                            if (Model.Client != null)
                            {
                                <p class='col-md-3'>
                                    Khách hàng: <b>@Model.Client.Name</b><br />
                                    <font style="font-size: 14px"><i class='fa fa-envelope'></i> @Model.Client.Email</font><br />
                                    <font style="font-size: 14px"><i class='fa fa-phone'></i> @Model.Client.Phone</font>
                                </p>
                            }
                            else
                            {
                                if (((string)Session["UserType"] == UserType.Sale.ToString()))
                                {
                                    <p class='col-md-3'>
                                        @Html.ActionLink("Tạo tài khoản khách hàng", "Register", "Account", new { phone = @Model.ListOrderDetails.ElementAt(0).Phone, id = Model.OrderId }, new { @class = "btn btn-danger btn-xs" })
                                    </p>
                                }
                            }
                        }
                    }
                    <span class="clearfix"></span>
                </div>

                <div class="alert alert-default btn-flat row">
                    <div class="col-md-12">
                        <h4>Chi tiết đơn hàng</h4>
                    </div>

                    <div class="col-md-6">
                        <p><font>(1) Tiền hàng</font><font style="float:right">@Model.TotalPriceConvert.ToString("##,###")<sup>đ</sup></font></p>
                        <p><font>(2) Phí dịch vụ (@Model.Fee%)</font><font style="float:right">@Math.Round((Model.TotalPriceConvert * Model.Fee) / 100, MidpointRounding.ToEven).ToString("##,###")<sup>đ</sup></font></p>
                        <p><font>(3) Ship nội địa TQ</font><font style="float:right">@Model.FeeShipChina<sup>đ</sup></font></p>
                        <p><font>(4) Trọng lượng</font><font style="float:right">@Model.Weight<sup>kg</sup></font></p>
                        <p><font>(5) Cước vận chuyển</font><font style="float:right">@Model.FeeShip<sup>đ</sup></font></p>

                    </div>
                    <div class="col-md-6">
                        <p><font>(6) Phí phát sinh (nếu có)</font><font style="float:right">0<sup>đ</sup></font></p>
                        <p><font>(7) Tổng = 1+2+3+5+6</font><font style="float:right">@((Model.TotalPriceConvert + Math.Round((Model.TotalPriceConvert * Model.Fee) / 100, MidpointRounding.ToEven) + Model.FeeShipChina + Model.FeeShip).ToString("##,###"))<sup>đ</sup></font></p>
                        <p><font>(8) Đặt cọc</font><font style="float:right">@Model.DownPayment.ToString("##,###")<sup>đ</sup></font></p>
                        <p><font>(9) Đã thu thêm</font><font style="float:right">@Model.AccountingCollected.ToString("##,###")<sup>đ</sup></font></p>
                        <p><font>(10) Còn thiếu</font><font style="float:right">@(((Model.TotalPriceConvert + Math.Round((Model.TotalPriceConvert * Model.Fee) / 100, MidpointRounding.ToEven) + Model.FeeShipChina + Model.FeeShip) - Model.DownPayment - Model.AccountingCollected).ToString("##,###"))<sup>đ</sup></font></p>
                    </div>
                    <span class="clearfix"></span>
                    <p class="col-md-6 pull-right">
                        @if (Session["UserType"] != null)
                        {
                            if (OrderChina.Common.Utilities.CheckRole((string)Session["UserType"], UserType.Sale.ToString()))
                            {
                                if (Model.Status == OrderStatus.New.ToString() || Model.Status == OrderStatus.OrdererReject.ToString())
                                {
                                    <a href="@Url.Action("SaleConfirmOrder", "Account", new {id = Model.OrderId})" style="margin-right: 5px" rel='tooltip' class="btn btn-primary pull-right btn-sale-confirm" title="Chốt đơn"> Chốt đơn hàng</a>

                                }
                                if (Model.Status == OrderStatus.FullCollect.ToString())
                                {
                                    <a href="#" onclick="confirm_order(@Model.OrderId,'5');" style="margin-right: 5px" class="btn btn-facebook btn-xs pull-right" title="Xác nhận đã gửi hàng cho KH">
                                        <i class="fa fa-ticket"></i> Xác nhận giao hàng
                                    </a>
                                }

                            }

                            if (OrderChina.Common.Utilities.CheckRole((string)Session["UserType"], UserType.Accounting.ToString()))
                            {
                                if (Model.Status == OrderStatus.SaleConfirm.ToString() || Model.Status == OrderStatus.Receive.ToString())
                                {
                                    <a href="@Url.Action("AccountingConfirmOrder", "Account", new {id = Model.OrderId})" style="margin-right: 5px" rel='tooltip' class="btn btn-primary pull-right btn-account-confirm" title="Cập nhật thanh toán"> Cập nhật thanh toán</a>
                                }
                            }

                            if (OrderChina.Common.Utilities.CheckRole((string)Session["UserType"], UserType.Orderer.ToString()))
                            {
                                if (Model.Status == OrderStatus.Paid.ToString())
                                {
                                    <a href="#" onclick="confirm_order(@Model.OrderId,'2');" style="margin-right: 5px" class="btn btn-primary pull-right" title="Gửi sale">
                                        <i class="fa fa-arrow-left"></i> Gửi sale
                                    </a>

                                    <a href="@Url.Action("UpdateOrder", "Account", new { id = Model.OrderId })" style="margin-right: 5px" rel='tooltip' class="btn btn-primary pull-right btn-orderer-confirm" title="Đặt hàng thành công">Đặt hàng thành công</a>

                                }
                            }
                            if (OrderChina.Common.Utilities.CheckRole((string)Session["UserType"], UserType.Recieve.ToString()))
                            {
                                if (Model.Status == OrderStatus.Order.ToString())
                                {
                                    <a href="#" onclick="confirm_order(@Model.OrderId,'4');" style="margin-right: 5px" class="btn btn-primary pull-right" title="Xác nhận hàng về">
                                        <i class="fa fa-arrow-left"></i> Xác nhận hàng về
                                    </a>

                                }
                            }
                        }
                    </p>
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="row">
                <div class='order-group row' id='no-shop'>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th class='text-center'>Mã link</th>
                                <th class='text-center' style="width: 100px;">Link</th>
                                @*<th class='text-center'>Shop</th>*@
                                <th class='text-center'>Mô tả</th>
                                <th class='text-center'>Khối lượng</th>
                                <th class='text-center'>Đặt được</th>
                                <th class='text-center'>Về kho</th>
                                <th class='text-center'>Đơn giá</th>
                                <th class='text-center'>Thành tiền</th>
                                <th class='text-center'>Ngày xuất</th>
                                <th class='text-center'>Ghi chú</th>
                                <th class='text-center'>Trạng thái</th>
                                <th class='text-center'>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody id='link-container'>
                            @foreach (var item in Model.ListOrderDetails)
                            {
                                <tr>
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.OrderDetailId)
                                    </td>
                                    <td class='text-center'>
                                        <a href="@item.Link" target="_blank">
                                            @item.Link
                                        </a>
                                    </td>
                                    @*<td class='text-center'>
                                            @Html.DisplayFor(modelItem => item.Shop)
                                        </td>*@
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.Description)
                                    </td>
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.Quantity)
                                    </td>
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.QuantitySellPlace)
                                    </td>
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.QuantityInWarehouse)
                                    </td>
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.Price)
                                    </td>
                                    <td class='text-center'>
                                        @(((item.Price * item.Quantity) ?? 0).ToString("##,##0"))
                                    </td>
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.DeliveryDate)
                                    </td>
                                    <td class='text-center'>
                                        @Html.DisplayFor(modelItem => item.Note)
                                    </td>
                                    <td class='text-center'>
                                        @item.getStatusText()
                                    </td>
                                    <td class='text-center' id="action">
                                        @if (Session["UserType"] != null)
                                        {
                                            if (OrderChina.Common.Utilities.CheckRole((string)Session["UserType"]))
                                            {
                                                if (Model.Status == OrderStatus.Paid.ToString() || Model.Status == OrderStatus.New.ToString() || Model.Status == OrderStatus.OrdererReject.ToString())
                                                {
                                                    <a href="@Url.Action("AddEditOrderDetail", "Account", new {id = item.OrderDetailId})" rel='tooltip' title="Sửa link" class='btn btn-info btn-xs btn-edit'><i class="fa fa-edit"></i></a>
                                                    <a href="@Url.Action("UpdateOrderDetail", "Account", new {id = item.OrderDetailId, IsOrderer = true})" rel='tooltip' title="Cập nhật TT đặt hàng" class='btn btn-info btn-xs btn-edit-info'><i class="glyphicon glyphicon-cog"></i></a>
                                                    <a href="@Url.Action("DeletedOrderDetail", "Account", new { id = item.OrderDetailId })" rel='tooltip' title="Xóa link" class='btn btn-danger btn-xs btn-deleted'><i class="fa fa-trash-o"></i></a>
                                                }
                                                if (@Model.Status == OrderStatus.Order.ToString())
                                                {
                                                    <a href="@Url.Action("UpdateOrderDetail", "Account", new {id = item.OrderDetailId, IsOrderer = false})" rel='tooltip' title="Cập nhật TT nhận hàng" class='btn btn-info btn-xs btn-edit-info'><i class="glyphicon glyphicon-cog"></i></a>
                                                }
                                            }
                                            else if ((string)Session["UserType"] == UserType.Client.ToString())
                                            {
                                                if (Model.Status == OrderStatus.New.ToString())
                                                {
                                                    <a href="@Url.Action("AddEditOrderDetail", "Account", new { id = item.OrderDetailId })" rel='tooltip' title="Sửa link" class='btn btn-info btn-xs btn-edit'><i class="fa fa-edit"></i></a>
                                                    <a href="@Url.Action("DeletedOrderDetail", "Account", new { id = item.OrderDetailId })" rel='tooltip' title="Xóa link" class='btn btn-danger btn-xs btn-deleted'><i class="fa fa-trash-o"></i></a>
                                                }
                                            }
                                            else if ((string)Session["UserType"] == UserType.Sale.ToString())
                                            {
                                                if (Model.Status == OrderStatus.New.ToString() || Model.Status == OrderStatus.OrdererReject.ToString())
                                                {
                                                    <a href="@Url.Action("AddEditOrderDetail", "Account", new {id = item.OrderDetailId})" rel='tooltip' title="Sửa link" class='btn btn-info btn-xs btn-edit'><i class="fa fa-edit"></i></a>
                                                    <a href="@Url.Action("DeletedOrderDetail", "Account", new {id = item.OrderDetailId})" rel='tooltip' title="Xóa link" class='btn btn-danger btn-xs btn-deleted'><i class="fa fa-trash-o"></i></a>
                                                }
                                            }
                                            else if ((string)Session["UserType"] == UserType.Orderer.ToString())
                                            {
                                                if (Model.Status == OrderStatus.Paid.ToString())
                                                {
                                                    <a href="@Url.Action("AddEditOrderDetail", "Account", new {id = item.OrderDetailId})" rel='tooltip' title="Sửa link" class='btn btn-info btn-xs btn-edit'><i class="fa fa-edit"></i></a>
                                                    <a href="@Url.Action("UpdateOrderDetail", "Account", new {id = item.OrderDetailId, IsOrderer = true})" rel='tooltip' title="Cập nhật TT đặt hàng" class='btn btn-info btn-xs btn-edit-info'><i class="glyphicon glyphicon-cog"></i></a>
                                                    <a href="@Url.Action("DeletedOrderDetail", "Account", new {id = item.OrderDetailId})" rel='tooltip' title="Xóa link" class='btn btn-danger btn-xs btn-deleted'><i class="fa fa-trash-o"></i></a>
                                                }
                                            }
                                            else if ((string)Session["UserType"] == UserType.Recieve.ToString())
                                            {
                                                if (@Model.Status == OrderStatus.Order.ToString())
                                                {
                                                    <a href="@Url.Action("UpdateOrderDetail", "Account", new { id = item.OrderDetailId,IsOrderer=false})" rel='tooltip' title="Cập nhật TT nhận hàng" class='btn btn-info btn-xs btn-edit-info'><i class="glyphicon glyphicon-cog"></i></a>
                                                }
                                            }
                                        }
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                    @if (Session["UserType"] != null)
                    {
                        if ((string)Session["UserType"] == UserType.Client.ToString())
                        {
                            if (Model.Status == OrderStatus.New.ToString())
                            {
                                <a href="@Url.Action("AddEditOrderDetail", "Account", new {orderId = Model.OrderId})" class="btn-flat btn-warning btn-xs btn pull-right btn-add" style="margin-right: 20px">
                                    <i class="fa fa-plus"></i> Thêm link
                                </a>
                            }

                        }
                        else if (OrderChina.Common.Utilities.CheckRole((string)Session["UserType"], UserType.Sale.ToString()))
                        {
                            if (Model.Status == OrderStatus.New.ToString() || Model.Status == OrderStatus.OrdererReject.ToString())
                            {
                                <a href="@Url.Action("AddEditOrderDetail", "Account", new {orderId = Model.OrderId})" class="btn-flat btn-warning btn-xs btn pull-right btn-add" style="margin-right: 20px">
                                    <i class="fa fa-plus"></i> Thêm link
                                </a>
                            }

                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade"
         id="myModal"
         tabindex="-1"
         role="dialog"
         aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog" style="width: 900px">
            <!-- empty -->
        </div>
    </div>
    <div class="modal fade"
         id="myModal1"
         tabindex="-1"
         role="dialog"
         aria-labelledby="myModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-mini">
            <!-- empty -->
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootbox")


    <script>
        $(document).ready(function () {
            $('#fromDate input').datepicker({
                orientation: "bottom auto",
                todayHighlight: true
            });
            $('#toDate input').datepicker({
                orientation: "bottom auto",
                todayHighlight: true
            });
            $('.btn-add').click(function (e) {

                /*
                * hủy liên kết
                *
                * việc này quan trọng
                * nếu không hủy liên kết, modal sẽ không được load đúng cách
                * vì action sẽ trả về 1 trang html trống với partialview
                *
                * cách tương tự return false; cách này thực hiện ở cuối method
                */
                e.preventDefault();

                var $modal = $('#myModal');
                var $modalDialog = $('.modal-dialog');
                var href = $(this).prop('href');

                // không cho phép tắt modal khi click bên ngoài modal
                var option = { backdrop: 'static' };

                // kiểm tra (logic, điều kiện...)

                // load modal
                $modalDialog.load(href, function () {
                    $modal.modal(option, 'show');
                });
            });
            $('.btn-edit').click(function (e) {

                /*
                * hủy liên kết
                *
                * việc này quan trọng
                * nếu không hủy liên kết, modal sẽ không được load đúng cách
                * vì action sẽ trả về 1 trang html trống với partialview
                *
                * cách tương tự return false; cách này thực hiện ở cuối method
                */
                e.preventDefault();

                var $modal = $('#myModal');
                var $modalDialog = $('.modal-dialog');
                var href = $(this).prop('href');

                // không cho phép tắt modal khi click bên ngoài modal
                var option = { backdrop: 'static' };

                // kiểm tra (logic, điều kiện...)

                // load modal
                $modalDialog.load(href, function () {
                    $modal.modal(option, 'show');
                });
            });
            $('.btn-edit-info').click(function (e) {

                /*
                * hủy liên kết
                *
                * việc này quan trọng
                * nếu không hủy liên kết, modal sẽ không được load đúng cách
                * vì action sẽ trả về 1 trang html trống với partialview
                *
                * cách tương tự return false; cách này thực hiện ở cuối method
                */
                e.preventDefault();

                var $modal = $('#myModal');
                var $modalDialog = $('.modal-dialog');
                var href = $(this).prop('href');

                // không cho phép tắt modal khi click bên ngoài modal
                var option = { backdrop: 'static' };

                // kiểm tra (logic, điều kiện...)

                // load modal
                $modalDialog.load(href, function () {
                    $modal.modal(option, 'show');
                });
            });
            $('.btn-sale-confirm').click(function (e) {

                /*
                * hủy liên kết
                *
                * việc này quan trọng
                * nếu không hủy liên kết, modal sẽ không được load đúng cách
                * vì action sẽ trả về 1 trang html trống với partialview
                *
                * cách tương tự return false; cách này thực hiện ở cuối method
                */
                e.preventDefault();

                var $modal = $('#myModal1');
                var $modalDialog = $('.modal-mini');
                var href = $(this).prop('href');

                // không cho phép tắt modal khi click bên ngoài modal
                var option = { backdrop: 'static' };

                // kiểm tra (logic, điều kiện...)

                // load modal
                $modalDialog.load(href, function () {
                    $modal.modal(option, 'show');
                });
            });
            $('.btn-account-confirm').click(function (e) {

                /*
                * hủy liên kết
                *
                * việc này quan trọng
                * nếu không hủy liên kết, modal sẽ không được load đúng cách
                * vì action sẽ trả về 1 trang html trống với partialview
                *
                * cách tương tự return false; cách này thực hiện ở cuối method
                */
                e.preventDefault();

                var $modal = $('#myModal1');
                var $modalDialog = $('.modal-mini');
                var href = $(this).prop('href');

                // không cho phép tắt modal khi click bên ngoài modal
                var option = { backdrop: 'static' };

                // kiểm tra (logic, điều kiện...)

                // load modal
                $modalDialog.load(href, function () {
                    $modal.modal(option, 'show');
                });
            });
            $('.btn-orderer-confirm').click(function (e) {

                /*
                * hủy liên kết
                *
                * việc này quan trọng
                * nếu không hủy liên kết, modal sẽ không được load đúng cách
                * vì action sẽ trả về 1 trang html trống với partialview
                *
                * cách tương tự return false; cách này thực hiện ở cuối method
                */
                e.preventDefault();

                var $modal = $('#myModal1');
                var $modalDialog = $('.modal-mini');
                var href = $(this).prop('href');

                // không cho phép tắt modal khi click bên ngoài modal
                var option = { backdrop: 'static' };

                // kiểm tra (logic, điều kiện...)

                // load modal
                $modalDialog.load(href, function () {
                    $modal.modal(option, 'show');
                });
            });
            $(".btn-deleted").click(function (e) {
                e.preventDefault();

                var url = $(this).attr('href');

                bootbox.dialog({
                    message: "Bạn có chắc muốn xóa link này?",
                    title: "Xóa link khỏi đơn hàng",
                    buttons: {
                        success: {
                            label: "Xóa!",
                            className: "btn btn-success",
                            callback: function () {
                                $(this).modal('hide');
                                window.location = url;
                            }
                        },
                        danger: {
                            label: "Đóng!",
                            className: "btn btn-flat",
                            callback: function () {
                                $(this).modal('hide');
                            }
                        }
                    }
                });
            });


        }); // document ready
        function confirm_order(orderId, type) {
            if (type == 0) {
                $.ajax({
                    url: "@Url.Action("Cancel_Order", "Account")",
                    type: 'POST',
                    data: '{ \"orderId\" : \"' + orderId + '\"}',
                    contentType: 'application/json; charset=utf-8',
                    dataType: "json",
                    success: function (data) {
                        //alert(data.success);
                        if (data.success) {
                            bootbox.alert("Hủy đơn hàng thành công!", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert("Có lỗi trong quá trình hủy đơn hàng!", function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function () {
                        alert("Lỗi");
                    }
                });
            } else if (type == 1) {
                $.ajax({
                    url: "@Url.Action("Confirm_Order", "Account")",
                    type: 'POST',
                    data: '{ \"orderId\" : \"' + orderId + '\"}',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data.success) {
                            bootbox.alert("Xác nhận đơn hàng thành công!", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert("Có lỗi trong quá trình xác nhận đơn hàng!", function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function () {
                        alert("Lỗi");
                    }
                });
            }
            else if (type == 2) {
                $.ajax({
                    url: "@Url.Action("OrdererRejectOrder", "Account")",
                    type: 'POST',
                    data: '{ \"orderId\" : \"' + orderId + '\"}',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data.success) {
                            bootbox.alert("Gửi lại đơn hàng cho sale thành công!", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert("Có lỗi trong quá trình gửi lại đơn hàng!", function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function () {
                        bootbox.alert("Lỗi");
                    }
                });
            }
            else if (type == 3) {
                $.ajax({
                    url: "@Url.Action("OrdererConfirmOrder", "Account")",
                    type: 'POST',
                    data: '{ \"orderId\" : \"' + orderId + '\"}',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data.success) {
                            bootbox.alert("Xác nhận đặt hàng thành công!", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert("Có lỗi trong quá trình xác nhận đặt hàng!", function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function () {
                        bootbox.alert("Lỗi");
                    }
                });
            } else if (type == 4) {
                $.ajax({
                    url: "@Url.Action("ConfirmReceive", "Account")",
                    type: 'POST',
                    data: '{ \"orderId\" : \"' + orderId + '\"}',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data.success) {
                            bootbox.alert("Xác nhận hàng về thành công!", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert("Có lỗi trong quá trình xác nhận hàng về!", function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function () {
                        bootbox.alert("Lỗi");
                    }
                });
            } else if (type == 5) {
                $.ajax({
                    url: "@Url.Action("FinishOrder", "Account")",
                    type: 'POST',
                    data: '{ \"orderId\" : \"' + orderId + '\"}',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        if (data.success) {
                            bootbox.alert("Xác nhận đã giao hàng cho khách thành công!", function () {
                                window.location.reload();
                            });
                        } else {
                            bootbox.alert("Có lỗi trong quá trình xác nhận giao hàng!", function () {
                                window.location.reload();
                            });
                        }
                    },
                    error: function () {
                        bootbox.alert("Lỗi");
                    }
                });
            }

        }

    </script>
}
